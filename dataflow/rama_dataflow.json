{
	"name": "rama_dataflow",
	"properties": {
		"folder": {
			"name": "ramadaaflows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "bronze_dataset_datflowr",
						"type": "DatasetReference"
					},
					"name": "sourceemployees"
				},
				{
					"dataset": {
						"referenceName": "bronzlayerdepartmentr",
						"type": "DatasetReference"
					},
					"name": "sourcedepatment"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "bronzetosilver",
						"type": "DatasetReference"
					},
					"name": "silver"
				}
			],
			"transformations": [
				{
					"name": "join1emde"
				}
			],
			"scriptLines": [
				"source(output(",
				"          employee_id as long,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          phone_number as string,",
				"          hire_date as timestamp,",
				"          job_id as string,",
				"          salary as decimal(38,18),",
				"          commission_pct as decimal(38,18),",
				"          manager_id as long,",
				"          department_id as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceemployees",
				"source(output(",
				"          department_id as long,",
				"          department_name as string,",
				"          manager_id as long,",
				"          location_id as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourcedepatment",
				"sourceemployees, sourcedepatment join(sourceemployees@department_id == sourcedepatment@department_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1emde",
				"join1emde sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          WORKER_ID as integer,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          SALARY as integer,",
				"          JOINING_DATE as string,",
				"          DEPARTMENT as string",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> silver"
			]
		}
	}
}